{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nconst _c0 = [\"stepWrapper\"];\n\nconst _c1 = function (a0) {\n  return {\n    \"invisible\": a0\n  };\n};\n\nfunction SiriusStepperComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelement(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"div\", 9);\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function SiriusStepperComponent_ng_container_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const stepIndex_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.transitionToStep(stepIndex_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const stepIndex_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(\"border-color: \" + ctx_r0.getColor(stepIndex_r2));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, ctx_r0.isFirstStep(stepIndex_r2)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(\"background-color: \" + ctx_r0.getColor(stepIndex_r2));\n    i0.ɵɵpropertyInterpolate1(\"id\", \"sscb_\", stepIndex_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(\"border-color: \" + ctx_r0.getColor(stepIndex_r2 + 1));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, ctx_r0.isLastStep(stepIndex_r2)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMap(\"color: \" + ctx_r0.getColor(stepIndex_r2) + \"; font-family: \" + ctx_r0.fontFamily + \"; font-size: \" + ctx_r0.fontSize);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"sscb_\", stepIndex_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getStepLabel(stepIndex_r2));\n  }\n}\n\nconst _c2 = [[[\"\", \"sirius-logo\", \"\"]], [[\"\", \"sirius-step\", \"\"]]];\nconst _c3 = [\"[sirius-logo]\", \"[sirius-step]\"];\n\nclass SiriusStepperComponent {\n  constructor(animBuilder) {\n    this.animBuilder = animBuilder;\n    this.indexChanges = new EventEmitter(true);\n    this.indexes = new EventEmitter(true);\n    this.highlightColor = '#000000';\n    this.mutedColor = '#AAAAAA';\n    this.fontFamily = 'Arial';\n    this.fontSize = 'inherit';\n    this._steps$ = new BehaviorSubject({});\n    this._stepViewIndex$ = new ReplaySubject(1);\n    this._stepControl$ = new ReplaySubject(1);\n    this._animating = false;\n    this.destroyed$ = new ReplaySubject(1);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n  }\n\n  ngAfterViewInit() {\n    this.init();\n    this.setupStepTransitions();\n  }\n\n  get stepControl$() {\n    return this._stepControl$.asObservable();\n  }\n\n  get stepIndexes() {\n    return Object.keys(this._steps$.value).map(k => parseInt(k)).sort((a, b) => a - b);\n  }\n\n  getStepLabel(stepIndex) {\n    return this._steps$.value[stepIndex].stepLabel || '';\n  }\n\n  isFirstStep(stepIndex) {\n    return this.stepIndexes[0] === stepIndex;\n  }\n\n  isLastStep(stepIndex) {\n    return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\n  }\n\n  getColor(stepIndex) {\n    return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n  }\n\n  linkStep(step) {\n    if (!step || !step.stepIndex && step.stepIndex !== 0) throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n    const newStep = {};\n    newStep[step.stepIndex] = step;\n\n    this._steps$.next(Object.assign({}, this._steps$.value, newStep));\n  }\n\n  unlinkStep(step) {\n    if (!step || !step.stepIndex && step.stepIndex !== 0) throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n    const newSteps = Object.assign({}, this._steps$.value);\n    delete newSteps[step.stepIndex];\n\n    this._steps$.next(newSteps);\n  }\n\n  transitionToStep(stepIndex) {\n    if (this._animating) return;\n    const stepIndexes = Object.keys(this._steps$.value);\n    if (!stepIndexes.find(i => parseInt(i) === stepIndex)) throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n\n    this._stepViewIndex$.next(stepIndex);\n  }\n\n  init() {\n    this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\n      // filter out empty obj\n      return steps && Object.keys(steps).length > 0 ? true : false;\n    })).subscribe(steps => {\n      setTimeout(() => this.indexes.emit(this.stepIndexes)); // set first step as active by default\n\n      this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\n    });\n\n    if (!this.overrideIndex$) return;\n    this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\n      if (!newIndex && newIndex !== 0) return;\n      this.transitionToStep(newIndex);\n    });\n  }\n\n  setupStepTransitions() {\n    this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\n      this._animating = true;\n      setTimeout(() => {\n        this._currentStepIndexImmediate = stepIndex;\n        this.indexChanges.emit(stepIndex);\n      });\n      if (this._currentStepIndex || this._currentStepIndex === 0) return this.animate(this.fadeOut).pipe(map(() => stepIndex));\n      return of(stepIndex);\n    }), switchMap(stepIndex => {\n      if (this._currentStepIndex || this._currentStepIndex === 0) {\n        this._stepControl$.next({\n          index: this._currentStepIndex,\n          state: 'destroy'\n        });\n      }\n\n      this._stepControl$.next({\n        index: stepIndex,\n        state: 'create'\n      });\n\n      return this.animate(this.fadeIn).pipe(tap(() => {\n        this._currentStepIndex = stepIndex;\n        this._animating = false;\n      }));\n    })).subscribe(() => {});\n  }\n\n  animate(animation) {\n    return new Observable(obs => {\n      const animFactory = this.animBuilder.build(animation);\n      const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n      animPlayer.play();\n      animPlayer.onDone(() => {\n        obs.next();\n        obs.complete();\n      });\n    });\n  }\n\n  get fadeIn() {\n    return [style({\n      opacity: 0,\n      bottom: -20\n    }), animate('200ms ease-in', style({\n      opacity: 1,\n      bottom: 0\n    }))];\n  }\n\n  get fadeOut() {\n    return [style({\n      opacity: '*',\n      bottom: '*'\n    }), animate('200ms ease-in', style({\n      opacity: 0,\n      bottom: -20\n    }))];\n  }\n\n}\n\nSiriusStepperComponent.ɵfac = function SiriusStepperComponent_Factory(t) {\n  return new (t || SiriusStepperComponent)(i0.ɵɵdirectiveInject(i1.AnimationBuilder));\n};\n\nSiriusStepperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SiriusStepperComponent,\n  selectors: [[\"lib-sirius-stepper\"]],\n  viewQuery: function SiriusStepperComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepWrapper = _t.first);\n    }\n  },\n  inputs: {\n    overrideIndex$: [\"override-step\", \"overrideIndex$\"],\n    highlightColor: [\"highlight-color\", \"highlightColor\"],\n    mutedColor: [\"muted-color\", \"mutedColor\"],\n    fontFamily: [\"font-family\", \"fontFamily\"],\n    fontSize: [\"font-size\", \"fontSize\"]\n  },\n  outputs: {\n    indexChanges: \"step-changes\",\n    indexes: \"steps\"\n  },\n  ngContentSelectors: _c3,\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"header\"], [1, \"logo\"], [1, \"ctrlPanel\"], [4, \"ngFor\", \"ngForOf\"], [1, \"step-wrapper\"], [\"stepWrapper\", \"\"], [1, \"ctrlBtn\"], [1, \"gutterTop\"], [1, \"topWrap\"], [1, \"lineLeft\", 3, \"ngClass\"], [3, \"id\", \"click\"], [1, \"lineRight\", 3, \"ngClass\"], [3, \"for\"], [1, \"gutterBottom\"]],\n  template: function SiriusStepperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, SiriusStepperComponent_ng_container_4_Template, 10, 17, \"ng-container\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4, 5);\n      i0.ɵɵprojection(7, 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stepIndexes);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgClass],\n  styles: [\".header[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}.logo[_ngcontent-%COMP%]{text-align:center}.ctrlPanel[_ngcontent-%COMP%]{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn[_ngcontent-%COMP%]{display:flex;flex-direction:column}.ctrlBtn[_ngcontent-%COMP%]   .gutterTop[_ngcontent-%COMP%], .ctrlBtn[_ngcontent-%COMP%]   .gutterBottom[_ngcontent-%COMP%]{flex-grow:1}.ctrlBtn[_ngcontent-%COMP%]   .topWrap[_ngcontent-%COMP%]{display:flex;flex-direction:row}.ctrlBtn[_ngcontent-%COMP%]   .lineLeft[_ngcontent-%COMP%], .ctrlBtn[_ngcontent-%COMP%]   .lineRight[_ngcontent-%COMP%]{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding:8px 12px 0;text-align:center}.step-wrapper[_ngcontent-%COMP%]{position:relative}.invisible[_ngcontent-%COMP%]{visibility:hidden}@media only screen and (min-width: 600px){.header[_ngcontent-%COMP%]{flex-direction:row}.ctrlPanel[_ngcontent-%COMP%]{justify-content:right}}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SiriusStepperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-sirius-stepper',\n      template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n      styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n    }]\n  }], function () {\n    return [{\n      type: i1.AnimationBuilder\n    }];\n  }, {\n    stepWrapper: [{\n      type: ViewChild,\n      args: ['stepWrapper']\n    }],\n    indexChanges: [{\n      type: Output,\n      args: ['step-changes']\n    }],\n    indexes: [{\n      type: Output,\n      args: ['steps']\n    }],\n    overrideIndex$: [{\n      type: Input,\n      args: ['override-step']\n    }],\n    highlightColor: [{\n      type: Input,\n      args: ['highlight-color']\n    }],\n    mutedColor: [{\n      type: Input,\n      args: ['muted-color']\n    }],\n    fontFamily: [{\n      type: Input,\n      args: ['font-family']\n    }],\n    fontSize: [{\n      type: Input,\n      args: ['font-size']\n    }]\n  });\n})();\n\nclass SiriusLogoDirective {\n  constructor(templateRef, viewContainerRef) {\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit() {\n    this.viewContainerRef.clear();\n    this.viewContainerRef.createEmbeddedView(this.templateRef);\n  }\n\n}\n\nSiriusLogoDirective.ɵfac = function SiriusLogoDirective_Factory(t) {\n  return new (t || SiriusLogoDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nSiriusLogoDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SiriusLogoDirective,\n  selectors: [[\"\", \"sirius-logo\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SiriusLogoDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[sirius-logo]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, null);\n})();\n\nclass SiriusStepDirective {\n  constructor(templateRef, viewContainerRef) {\n    this.templateRef = templateRef;\n    this.viewContainerRef = viewContainerRef;\n    this.initialized$ = new ReplaySubject(1);\n    this.destroyed$ = new ReplaySubject(1);\n  }\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    this.component.unlinkStep(this);\n    this.destroyed$.next();\n  }\n\n  ngOnChanges(changes) {\n    if (this.component && (this.stepIndex || this.stepIndex === 0)) {\n      this.component.linkStep(this);\n      this.initialized$.next();\n    }\n  }\n\n  ngOnInit() {\n    this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\n      if (!command || command.index !== this.stepIndex) return;\n      if (command.state === 'destroy') setTimeout(() => this.viewContainerRef.clear());else if (command.state === 'create') setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\n    });\n  }\n\n}\n\nSiriusStepDirective.ɵfac = function SiriusStepDirective_Factory(t) {\n  return new (t || SiriusStepDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nSiriusStepDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: SiriusStepDirective,\n  selectors: [[\"\", \"sirius-step\", \"\"]],\n  inputs: {\n    component: [\"link\", \"component\"],\n    stepIndex: [\"step\", \"stepIndex\"],\n    stepLabel: [\"label\", \"stepLabel\"]\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SiriusStepDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[sirius-step]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    component: [{\n      type: Input,\n      args: ['link']\n    }],\n    stepIndex: [{\n      type: Input,\n      args: ['step']\n    }],\n    stepLabel: [{\n      type: Input,\n      args: ['label']\n    }]\n  });\n})();\n\nclass SiriusStepperModule {}\n\nSiriusStepperModule.ɵfac = function SiriusStepperModule_Factory(t) {\n  return new (t || SiriusStepperModule)();\n};\n\nSiriusStepperModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SiriusStepperModule\n});\nSiriusStepperModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, BrowserAnimationsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SiriusStepperModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SiriusStepperComponent, SiriusLogoDirective, SiriusStepDirective],\n      imports: [CommonModule, BrowserAnimationsModule],\n      exports: [SiriusStepperComponent, SiriusLogoDirective, SiriusStepDirective],\n      entryComponents: [SiriusLogoDirective, SiriusStepDirective]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of sirius-stepper\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };","map":{"version":3,"sources":["/Users/davidvargas/Workspace/sirius-stepper/sirius-stepper-test/node_modules/sirius-stepper/fesm2015/sirius-stepper.mjs"],"names":["i0","EventEmitter","Component","ViewChild","Output","Input","Directive","NgModule","i1","style","animate","BehaviorSubject","ReplaySubject","of","Observable","takeUntil","filter","switchMap","map","tap","i2","CommonModule","BrowserAnimationsModule","SiriusStepperComponent","constructor","animBuilder","indexChanges","indexes","highlightColor","mutedColor","fontFamily","fontSize","_steps$","_stepViewIndex$","_stepControl$","_animating","destroyed$","ngOnDestroy","next","ngAfterViewInit","init","setupStepTransitions","stepControl$","asObservable","stepIndexes","Object","keys","value","k","parseInt","sort","a","b","getStepLabel","stepIndex","stepLabel","isFirstStep","isLastStep","length","getColor","_currentStepIndexImmediate","linkStep","step","Error","newStep","assign","unlinkStep","newSteps","transitionToStep","find","i","pipe","steps","subscribe","setTimeout","emit","overrideIndex$","newIndex","_currentStepIndex","fadeOut","index","state","fadeIn","animation","obs","animFactory","build","animPlayer","create","stepWrapper","nativeElement","play","onDone","complete","opacity","bottom","ɵfac","AnimationBuilder","ɵcmp","NgForOf","NgClass","type","args","selector","template","styles","SiriusLogoDirective","templateRef","viewContainerRef","clear","ngOnInit","createEmbeddedView","TemplateRef","ViewContainerRef","ɵdir","SiriusStepDirective","initialized$","component","ngOnChanges","changes","command","SiriusStepperModule","ɵmod","ɵinj","declarations","imports","exports","entryComponents"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA/CmB;AAgDCC,MAAAA,MAAM,EAAE,CAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnE4B;AAhDT,KAAD;AAF8G,GAAD,CAA/H,EAuH4B,YAAY;AAAE,WAAO,CAAC;AAAEJ,MAAAA,IAAI,EAAE7F,EAAE,CAACyF;AAAX,KAAD,CAAP;AAAyC,GAvHnF,EAuHqG;AAAER,IAAAA,WAAW,EAAE,CAAC;AACrGY,MAAAA,IAAI,EAAElG,SAD+F;AAErGmG,MAAAA,IAAI,EAAE,CAAC,aAAD;AAF+F,KAAD,CAAf;AAGrF5E,IAAAA,YAAY,EAAE,CAAC;AACf2E,MAAAA,IAAI,EAAEjG,MADS;AAEfkG,MAAAA,IAAI,EAAE,CAAC,cAAD;AAFS,KAAD,CAHuE;AAMrF3E,IAAAA,OAAO,EAAE,CAAC;AACV0E,MAAAA,IAAI,EAAEjG,MADI;AAEVkG,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFI,KAAD,CAN4E;AASrF1B,IAAAA,cAAc,EAAE,CAAC;AACjByB,MAAAA,IAAI,EAAEhG,KADW;AAEjBiG,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFW,KAAD,CATqE;AAYrF1E,IAAAA,cAAc,EAAE,CAAC;AACjByE,MAAAA,IAA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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nclass SiriusStepperComponent {\n    constructor(animBuilder) {\n        this.animBuilder = animBuilder;\n        this.indexChanges = new EventEmitter(true);\n        this.indexes = new EventEmitter(true);\n        this.highlightColor = '#000000';\n        this.mutedColor = '#AAAAAA';\n        this.fontFamily = 'Arial';\n        this.fontSize = 'inherit';\n        this._steps$ = new BehaviorSubject({});\n        this._stepViewIndex$ = new ReplaySubject(1);\n        this._stepControl$ = new ReplaySubject(1);\n        this._animating = false;\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    ngAfterViewInit() {\n        this.init();\n        this.setupStepTransitions();\n    }\n    get stepControl$() {\n        return this._stepControl$.asObservable();\n    }\n    get stepIndexes() {\n        return Object.keys(this._steps$.value)\n            .map(k => parseInt(k))\n            .sort((a, b) => a - b);\n    }\n    getStepLabel(stepIndex) {\n        return this._steps$.value[stepIndex].stepLabel || '';\n    }\n    isFirstStep(stepIndex) {\n        return this.stepIndexes[0] === stepIndex;\n    }\n    isLastStep(stepIndex) {\n        return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\n    }\n    getColor(stepIndex) {\n        return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n    }\n    linkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newStep = {};\n        newStep[step.stepIndex] = step;\n        this._steps$.next(Object.assign({}, this._steps$.value, newStep));\n    }\n    unlinkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newSteps = Object.assign({}, this._steps$.value);\n        delete newSteps[step.stepIndex];\n        this._steps$.next(newSteps);\n    }\n    transitionToStep(stepIndex) {\n        if (this._animating)\n            return;\n        const stepIndexes = Object.keys(this._steps$.value);\n        if (!stepIndexes.find(i => parseInt(i) === stepIndex))\n            throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n        this._stepViewIndex$.next(stepIndex);\n    }\n    init() {\n        this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\n            // filter out empty obj\n            return (steps && Object.keys(steps).length > 0) ? true : false;\n        })).subscribe(steps => {\n            setTimeout(() => this.indexes.emit(this.stepIndexes));\n            // set first step as active by default\n            this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\n        });\n        if (!this.overrideIndex$)\n            return;\n        this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\n            if (!newIndex && newIndex !== 0)\n                return;\n            this.transitionToStep(newIndex);\n        });\n    }\n    setupStepTransitions() {\n        this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\n            this._animating = true;\n            setTimeout(() => {\n                this._currentStepIndexImmediate = stepIndex;\n                this.indexChanges.emit(stepIndex);\n            });\n            if (this._currentStepIndex || this._currentStepIndex === 0)\n                return this.animate(this.fadeOut)\n                    .pipe(map(() => stepIndex));\n            return of(stepIndex);\n        }), switchMap(stepIndex => {\n            if (this._currentStepIndex || this._currentStepIndex === 0) {\n                this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\n            }\n            this._stepControl$.next({ index: stepIndex, state: 'create' });\n            return this.animate(this.fadeIn).pipe(tap(() => {\n                this._currentStepIndex = stepIndex;\n                this._animating = false;\n            }));\n        })).subscribe(() => { });\n    }\n    animate(animation) {\n        return new Observable(obs => {\n            const animFactory = this.animBuilder.build(animation);\n            const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n            animPlayer.play();\n            animPlayer.onDone(() => {\n                obs.next();\n                obs.complete();\n            });\n        });\n    }\n    get fadeIn() {\n        return [\n            style({ opacity: 0, bottom: -20 }),\n            animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\n        ];\n    }\n    get fadeOut() {\n        return [\n            style({ opacity: '*', bottom: '*' }),\n            animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\n        ];\n    }\n}\nSiriusStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nSiriusStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepperComponent, selector: \"lib-sirius-stepper\", inputs: { overrideIndex$: [\"override-step\", \"overrideIndex$\"], highlightColor: [\"highlight-color\", \"highlightColor\"], mutedColor: [\"muted-color\", \"mutedColor\"], fontFamily: [\"font-family\", \"fontFamily\"], fontSize: [\"font-size\", \"fontSize\"] }, outputs: { indexChanges: \"step-changes\", indexes: \"steps\" }, viewQueries: [{ propertyName: \"stepWrapper\", first: true, predicate: [\"stepWrapper\"], descendants: true }], ngImport: i0, template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `, isInline: true, styles: [\".header{display:flex;flex-direction:column;width:100%}.logo{text-align:center}.ctrlPanel{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn{display:flex;flex-direction:column}.ctrlBtn .gutterTop,.ctrlBtn .gutterBottom{flex-grow:1}.ctrlBtn .topWrap{display:flex;flex-direction:row}.ctrlBtn .lineLeft,.ctrlBtn .lineRight{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn button{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn label{padding:8px 12px 0;text-align:center}.step-wrapper{position:relative}.invisible{visibility:hidden}@media only screen and (min-width: 600px){.header{flex-direction:row}.ctrlPanel{justify-content:right}}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-sirius-stepper',\n                    template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n                    styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.AnimationBuilder }]; }, propDecorators: { stepWrapper: [{\n                type: ViewChild,\n                args: ['stepWrapper']\n            }], indexChanges: [{\n                type: Output,\n                args: ['step-changes']\n            }], indexes: [{\n                type: Output,\n                args: ['steps']\n            }], overrideIndex$: [{\n                type: Input,\n                args: ['override-step']\n            }], highlightColor: [{\n                type: Input,\n                args: ['highlight-color']\n            }], mutedColor: [{\n                type: Input,\n                args: ['muted-color']\n            }], fontFamily: [{\n                type: Input,\n                args: ['font-family']\n            }], fontSize: [{\n                type: Input,\n                args: ['font-size']\n            }] } });\n\nclass SiriusLogoDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n    }\n    ngOnInit() {\n        this.viewContainerRef.clear();\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n}\nSiriusLogoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusLogoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusLogoDirective, selector: \"[sirius-logo]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-logo]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n\nclass SiriusStepDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.initialized$ = new ReplaySubject(1);\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n        this.component.unlinkStep(this);\n        this.destroyed$.next();\n    }\n    ngOnChanges(changes) {\n        if (this.component && (this.stepIndex || this.stepIndex === 0)) {\n            this.component.linkStep(this);\n            this.initialized$.next();\n        }\n    }\n    ngOnInit() {\n        this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\n            if (!command || command.index !== this.stepIndex)\n                return;\n            if (command.state === 'destroy')\n                setTimeout(() => this.viewContainerRef.clear());\n            else if (command.state === 'create')\n                setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\n        });\n    }\n}\nSiriusStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepDirective, selector: \"[sirius-step]\", inputs: { component: [\"link\", \"component\"], stepIndex: [\"step\", \"stepIndex\"], stepLabel: [\"label\", \"stepLabel\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-step]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { component: [{\n                type: Input,\n                args: ['link']\n            }], stepIndex: [{\n                type: Input,\n                args: ['step']\n            }], stepLabel: [{\n                type: Input,\n                args: ['label']\n            }] } });\n\nclass SiriusStepperModule {\n}\nSiriusStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSiriusStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, declarations: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective], imports: [CommonModule,\n        BrowserAnimationsModule], exports: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective] });\nSiriusStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, imports: [[\n            CommonModule,\n            BrowserAnimationsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    imports: [\n                        CommonModule,\n                        BrowserAnimationsModule\n                    ],\n                    exports: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    entryComponents: [\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of sirius-stepper\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };\n"]},"metadata":{},"sourceType":"module"}